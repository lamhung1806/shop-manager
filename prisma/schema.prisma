// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  name        String
  role        ROLE     @default(BUYER)
  createdAt   DateTime @default(now()) @map("created_at")
  phoneNumber String?  @unique @map("phone_number")
  updatedAt   DateTime @updatedAt @map("updated_at")
  refreshToken String? @map("refresh_token")
  products    Product[]

  @@map("user")

}

model Product{
  id            Int            @id @default(autoincrement())
  name          String
  description   String?        @db.Text
  category      String?
  imageUrls     ProductImage[]         
  isActive      Boolean           @default(true) @map("is_active")
  createdAt     DateTime          @default(now()) @map("created_at")
  updatedAt     DateTime          @updatedAt  @map("updated_at")

  sellerId      String            @map("seller_id")
  seller        User              @relation(fields: [sellerId], references: [id])

  variants      ProductVariant[]

  @@map("product")
}

model ProductVariant {
  id         Int                  @id @default(autoincrement())
  sku        String?              @unique
  price      Float
  stock      Int                  @default(0)
  imageUrl   String?
  productId  Int                  @map("product_id")
  product    Product              @relation(fields: [productId], references: [id], onDelete: Cascade)
  attributes ProductVariantAttribute[] 

 @@map("product_variant")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  productId Int      @map("product_id")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_image")
}


model ProductVariantAttribute {
  id         Int       @id @default(autoincrement())
  name       String
  value      String?   
  variantId  Int       @map("variant_id")
  variant    ProductVariant @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@map("product_variant_attribute")
}

enum ROLE {
  SELLER
  BUYER
}
